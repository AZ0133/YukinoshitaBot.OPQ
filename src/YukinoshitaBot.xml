<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YukinoshitaBot</name>
    </assembly>
    <members>
        <member name="T:YukinoshitaBot.Controllers.CourseController">
            <summary>
            测试控制器
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Controllers.CourseController.#ctor(Microsoft.Extensions.Logging.ILogger{YukinoshitaBot.Controllers.RepeaterController},YukinoshitaBot.Services.BksJwcParser,YukinoshitaBot.Services.BksJwcSpider)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Controllers.CourseController"/> class.
            </summary>
            <param name="logger">logger</param>
            <param name="bksJwcParser">parser</param>
            <param name="bksJwcSpider">spider</param>
        </member>
        <member name="M:YukinoshitaBot.Controllers.CourseController.JwcLoginAsync(YukinoshitaBot.Data.Event.Message)">
            <summary>
            教务处登录测试
            </summary>
            <param name="message">消息</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:YukinoshitaBot.Controllers.CourseController.GetCourseAsync(YukinoshitaBot.Data.Event.Message)">
            <summary>
            课程爬取测试
            </summary>
            <param name="message">消息</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:YukinoshitaBot.Controllers.RepeaterController">
            <summary>
            测试控制器
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Controllers.RepeaterController.#ctor(Microsoft.Extensions.Logging.ILogger{YukinoshitaBot.Controllers.RepeaterController})">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Controllers.RepeaterController"/> class.
            </summary>
            <param name="logger">logger</param>
        </member>
        <member name="M:YukinoshitaBot.Controllers.RepeaterController.TextRepeater(YukinoshitaBot.Data.Event.Message)">
            <summary>
            文本消息复读
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:YukinoshitaBot.Controllers.RepeaterController.PictureRepeater(YukinoshitaBot.Data.Event.Message)">
            <summary>
            图片消息复读
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="T:YukinoshitaBot.Data.Attributes.CommandMatchMethod">
            <summary>
            指令识别方式
            </summary>
        </member>
        <member name="F:YukinoshitaBot.Data.Attributes.CommandMatchMethod.StartWith">
            <summary>
            开头识别
            </summary>
        </member>
        <member name="F:YukinoshitaBot.Data.Attributes.CommandMatchMethod.Strict">
            <summary>
            严格一致
            </summary>
        </member>
        <member name="F:YukinoshitaBot.Data.Attributes.CommandMatchMethod.Regex">
            <summary>
            正则匹配
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Attributes.HandleMode">
            <summary>
            处理方式
            </summary>
        </member>
        <member name="F:YukinoshitaBot.Data.Attributes.HandleMode.Break">
            <summary>
            本方法处理完毕后中断处理链
            </summary>
        </member>
        <member name="F:YukinoshitaBot.Data.Attributes.HandleMode.Pass">
            <summary>
            本方法处理完毕后继续将请求向之后的处理者传递
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Attributes.YukinoshitaControllerAttribute">
            <summary>
            定义为YukinoshitaController
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Attributes.YukinoshitaControllerAttribute.Priority">
            <summary>
            优先级，越小优先级越高
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Attributes.YukinoshitaControllerAttribute.Mode">
            <summary>
            处理模式
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute">
            <summary>
            定义为Yukinoshita消息处理方法
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute"/> class.
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute"/> class.
            </summary>
            <param name="command">要匹配的指令</param>
        </member>
        <member name="P:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute.MatchMethod">
            <summary>
            指令识别方式
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute.Command">
            <summary>
            匹配的指令
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute.Priority">
            <summary>
            优先级，越小优先级越高
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Attributes.YukinoshitaHandlerAttribute.Mode">
            <summary>
            处理模式
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Content.FriendMixtureContent">
            <summary>
            好友图文消息
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.FriendMixtureContent.Content">
            <summary>
            文本消息
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.FriendMixtureContent.FriendPic">
            <summary>
            图片列表
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.FriendMixtureContent.FileSize">
            <summary>
            文件大小，仅当图片为闪照时有效
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.FriendMixtureContent.Url">
            <summary>
            文件URL，仅当图片为闪照时有效
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.FriendMixtureContent.IsFlashPicture">
            <summary>
            是否闪照
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Content.GroupMixtureContent">
            <summary>
            群图文消息
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.GroupMixtureContent.Content">
            <summary>
            文本消息
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.GroupMixtureContent.GroupPic">
            <summary>
            图片列表
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.GroupMixtureContent.FileSize">
            <summary>
            文件大小，仅当图片为闪照时有效
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.GroupMixtureContent.Url">
            <summary>
            文件URL，仅当图片为闪照时有效
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Content.GroupMixtureContent.IsFlashPicture">
            <summary>
            是否闪照
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Event.MessageType">
            <summary>
            消息类型枚举
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Event.SenderType">
            <summary>
            发消息者类型枚举
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Event.Message">
            <summary>
            消息基类，提供类型判断、回复等功能
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.Message.#ctor(YukinoshitaBot.Data.Event.SenderInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Event.Message"/> class.
            </summary>
            <param name="sender">发送者信息</param>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.Message.MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.Message.SenderInfo">
            <summary>
            消息发送者
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.Message.OpqApi">
            <summary>
            OpqApi
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.Message.Parse(YukinoshitaBot.Data.GroupMessage)">
            <summary>
            从<see cref="T:YukinoshitaBot.Data.GroupMessage"/>创建Message
            </summary>
            <param name="rawMessage">原始消息</param>
            <exception cref="T:System.ArgumentException">ArgumentException</exception>
            <exception cref="T:System.NotImplementedException">NotImplementedException</exception>
            <returns><see cref="T:YukinoshitaBot.Data.Event.Message"/>的子类</returns>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.Message.Parse(YukinoshitaBot.Data.FriendMessage)">
            <summary>
            从<see cref="T:YukinoshitaBot.Data.FriendMessage"/>创建Message
            </summary>
            <param name="rawMessage">原始消息</param>
            <exception cref="T:System.ArgumentException">ArgumentException</exception>
            <exception cref="T:System.NotImplementedException">NotImplementedException</exception>
            <returns><see cref="T:YukinoshitaBot.Data.Event.Message"/>的子类</returns>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.Message.Reply(YukinoshitaBot.Data.OpqApi.MessageRequestBase)">
            <summary>
            回复消息
            </summary>
            <param name="resp">要回复的消息</param>
        </member>
        <member name="T:YukinoshitaBot.Data.Event.PictureMessage">
            <summary>
            图片消息
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.PictureMessage.#ctor(YukinoshitaBot.Data.Event.SenderInfo,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Event.PictureMessage"/> class.
            </summary>
            <param name="sender">发送者</param>
            <param name="picUrls">图片URL</param>
            <param name="content">文本消息</param>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.PictureMessage.#ctor(YukinoshitaBot.Data.Event.SenderInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Event.PictureMessage"/> class.
            </summary>
            <param name="sender">发送者</param>
            <param name="flashPicUrl">闪照URL</param>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.PictureMessage.PictureUrls">
            <summary>
            图片URL
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.PictureMessage.Content">
            <summary>
            文本消息
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.PictureMessage.IsFlashPicture">
            <summary>
            是否闪照
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.PictureMessage.FirstPicture">
            <summary>
            获取第一张图片的URL
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Event.SenderInfo">
            <summary>
            发消息者信息
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.SenderInfo.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Event.SenderInfo"/> struct.
            </summary>
            <param name="fromQQ">好友QQ</param>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.SenderInfo.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Event.SenderInfo"/> struct.
            </summary>
            <param name="fromQQ">群友QQ</param>
            <param name="fromGroup">群号</param>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.SenderInfo.#ctor(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Event.SenderInfo"/> struct.
            </summary>
            <param name="fromQQ">群友QQ</param>
            <param name="fromGroup">群号</param>
            <param name="groupName">群名称</param>
            <param name="nickName">群友群昵称</param>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.SenderInfo.FromGroupId">
            <summary>
            消息来源群号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.SenderInfo.FromGroupName">
            <summary>
            消息来源群名称，仅群消息有效
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.SenderInfo.FromQQ">
            <summary>
            消息来源用户QQ号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.SenderInfo.FromNickName">
            <summary>
            消息来源用户群昵称，仅群消息有效
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.SenderInfo.SenderType">
            <summary>
            发送者类型
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Event.TextMessage">
            <summary>
            文本消息
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.Event.TextMessage.#ctor(YukinoshitaBot.Data.Event.SenderInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Event.TextMessage"/> class.
            </summary>
            <param name="sender">发送者信息</param>
            <param name="content">文本消息</param>
        </member>
        <member name="P:YukinoshitaBot.Data.Event.TextMessage.Content">
            <summary>
            文本消息
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.FriendMessage">
            <summary>
            好友消息
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.FriendMessage.FromUin">
            <summary>
            发送者QQ号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.FriendMessage.ToUin">
            <summary>
            接收者QQ号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.FriendMessage.MsgSeq">
            <summary>
            消息序列
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.FriendMessage.GroupID">
            <summary>
            发送者所在群的群号，仅<see cref="P:YukinoshitaBot.Data.MessageBase.MsgType"/>为TempSessionMsg时有效
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.FriendMessage.RedBaginfo">
            <summary>
            红包信息
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.GroupMessage">
            <summary>
            群消息
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.GroupMessage.FromGroupId">
            <summary>
            消息来源群号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.GroupMessage.FromGroupName">
            <summary>
            消息来源群名称
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.GroupMessage.FromUserId">
            <summary>
            消息来源用户QQ号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.GroupMessage.FromNickName">
            <summary>
            消息来源用户群昵称
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.GroupMessage.MsgTime">
            <summary>
            消息时间(10位时间戳)
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.GroupMessage.MsgSeq">
            <summary>
            消息序列号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.GroupMessage.MsgRandom">
            <summary>
            消息随机数
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.GroupMessage.RedBaginfo">
            <summary>
            红包信息
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.MessageBase">
            <summary>
            消息基类，提供消息解析功能
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.MessageBase.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.MessageBase.MsgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.MessageBase.ParseContent``1">
            <summary>
            解析Json格式的消息内容
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <returns>解析后类型的实例</returns>
        </member>
        <member name="T:YukinoshitaBot.Data.OpqApi.MessageRequestBase">
            <summary>
            用于发送消息的基类
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.MessageRequestBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.OpqApi.MessageRequestBase"/> class.
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.ToUserUid">
            <summary>
            接收者ID
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.SendToType">
            <summary>
            发送类型
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.SendMsgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.GroupID">
            <summary>
            临时消息的群号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.HttpRequestMessage">
            <summary>
            与对象关联的<see cref="T:System.Net.Http.HttpRequestMessage"/>
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.MessageRequestBase.SendToFriend(System.Int64)">
            <summary>
            发送给好友
            </summary>
            <param name="friendQQ">好友QQ</param>
            <returns>用于发送好友消息的<see cref="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.HttpRequestMessage"/></returns>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.MessageRequestBase.SendToGroup(System.Int64)">
            <summary>
            发送到群
            </summary>
            <param name="groupId">好友QQ</param>
            <returns>用于发送群消息的<see cref="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.HttpRequestMessage"/></returns>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.MessageRequestBase.SendToGroupMember(System.Int64,System.Int64)">
            <summary>
            发送到临时会话
            </summary>
            <param name="userQQ">目的QQ号</param>
            <param name="groupId">该用户所在群的群号</param>
            <returns>用于发送临时会话的<see cref="P:YukinoshitaBot.Data.OpqApi.MessageRequestBase.HttpRequestMessage"/></returns>
        </member>
        <member name="T:YukinoshitaBot.Data.OpqApi.PictureMessageRequest">
            <summary>
            图片消息
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.OpqApi.PictureMessageRequest"/> class.
            </summary>
            <param name="base64EncodedImage">base64图片</param>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.OpqApi.PictureMessageRequest"/> class.
            </summary>
            <param name="picUri">图片URL</param>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.#ctor(System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.OpqApi.PictureMessageRequest"/> class.
            </summary>
            <param name="localPicture">本地图片文件</param>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.PicUrl">
            <summary>
            图片URL
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.PicPath">
            <summary>
            本地图片路径
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.PicBase64Buf">
            <summary>
            图片base64
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.AddContent(System.String)">
            <summary>
            为图片消息添加文本内容
            </summary>
            <param name="content">文本消息</param>
            <returns>添加文本消息后的图文消息</returns>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.SendToFriend(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.SendToGroup(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.PictureMessageRequest.SendToGroupMember(System.Int64,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="T:YukinoshitaBot.Data.OpqApi.TextMessageRequest">
            <summary>
            文本消息
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.TextMessageRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.OpqApi.TextMessageRequest"/> class.
            </summary>
            <param name="content">消息内容</param>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.TextMessageRequest.SendToFriend(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.TextMessageRequest.SendToGroup(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Data.OpqApi.TextMessageRequest.SendToGroupMember(System.Int64,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="T:YukinoshitaBot.Data.PictureInfo">
            <summary>
            图片信息
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.PictureInfo.FileId">
            <summary>
            文件序号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.PictureInfo.FileMD5">
            <summary>
            文件MD5
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.PictureInfo.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.PictureInfo.Url">
            <summary>
            文件URL
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.SocketPacket`1">
            <summary>
            SocketIO数据包格式
            </summary>
            <typeparam name="T">消息类型</typeparam>
        </member>
        <member name="P:YukinoshitaBot.Data.SocketPacket`1.WebConnId">
            <summary>
            连接ID
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.SocketPacket`1.Data">
            <summary>
            消息体
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.SocketResponse`1">
            <summary>
            SocketIO数据返回类型
            </summary>
            <typeparam name="T">消息类型</typeparam>
        </member>
        <member name="P:YukinoshitaBot.Data.SocketResponse`1.CurrentQQ">
            <summary>
            绑定到Socket的QQ号
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.SocketResponse`1.CurrentPacket">
            <summary>
            数据包
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Data.Whut.Course">
            <summary>
            课程数据
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Data.Whut.Course.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Data.Whut.Course"/> class.
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Whut.Course.Name">
            <summary>
            课程名
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Whut.Course.Teacher">
            <summary>
            授课教师
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Whut.Course.Room">
            <summary>
            上课地点
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Whut.Course.WeekStart">
            <summary>
            开始周
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Whut.Course.WeekEnd">
            <summary>
            结束周
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Whut.Course.SectionStart">
            <summary>
            开始节
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Whut.Course.SectionEnd">
            <summary>
            结束节
            </summary>
        </member>
        <member name="P:YukinoshitaBot.Data.Whut.Course.WeekDay">
            <summary>
            星期(1-7)
            </summary>
        </member>
        <member name="T:YukinoshitaBot.Extensions.HttpRequestMessageExtension">
            <summary>
            <see cref="T:System.Net.Http.HttpRequestMessage"/>的拓展
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Extensions.HttpRequestMessageExtension.AddToQueue(System.Net.Http.HttpRequestMessage,YukinoshitaBot.Services.OpqApi)">
            <summary>
            将请求添加到队列
            </summary>
            <param name="httpRequest">Http请求</param>
            <param name="opqApi">OPQ接口对象</param>
        </member>
        <member name="M:YukinoshitaBot.Extensions.HttpRequestMessageExtension.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpClient)">
            <summary>
            直接发送请求
            </summary>
            <param name="httpRequest">Http请求</param>
            <param name="httpClient">使用该<see cref="T:System.Net.Http.HttpClient"/>发送</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:YukinoshitaBot.Extensions.ServiceCollectionExtension">
            <summary>
            依赖注入拓展
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Extensions.ServiceCollectionExtension.AddYukinoshitaBot``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加YukinoshitaBot服务，使用自定义消息处理器
            </summary>
            <typeparam name="MessageHandlerType">要使用的消息处理器类型</typeparam>
            <param name="services">服务容器</param>
            <returns>链式调用服务容器</returns>
        </member>
        <member name="M:YukinoshitaBot.Extensions.ServiceCollectionExtension.AddYukinoshitaBot(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加YukinoshitaBot服务，使用YukinoshitaController处理消息
            </summary>
            <param name="services">服务容器</param>
            <returns>链式调用服务容器</returns>
        </member>
        <member name="T:YukinoshitaBot.Program">
            <summary>
            This is the main class of the application.
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Program.CreateBuilder(System.String[])">
            <summary>
            创建并配置HostBuilder
            </summary>
            <param name="args">控制台参数</param>
            <returns><see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/>的实例</returns>
        </member>
        <member name="T:YukinoshitaBot.Services.BksJwcParser">
            <summary>
            本科生教务数据解析
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.BksJwcParser.ParseCourses(System.String)">
            <summary>
            解析课程数据
            </summary>
            <param name="page">个人课表页</param>
            <returns>课程数据</returns>
        </member>
        <member name="T:YukinoshitaBot.Services.BksJwcSpider">
            <summary>
            本科生教务处爬虫
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.BksJwcSpider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Services.BksJwcSpider"/> class.
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.BksJwcSpider.LoginAsync(System.String,System.String)">
            <summary>
            登录教务处
            </summary>
            <param name="sno">学号</param>
            <param name="password">密码</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:YukinoshitaBot.Services.BksJwcSpider.GetIndexPageAsync">
            <summary>
            爬取教务处主页
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:YukinoshitaBot.Services.BksJwcSpider.NavigateToEotPageAsync">
            <summary>
            导航到评教系统
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:YukinoshitaBot.Services.BksJwcSpider.NavigateToCoursePageAsync">
            <summary>
            导航到选课系统
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:YukinoshitaBot.Services.BksJwcSpider.GetCoursesAsync">
            <summary>
            爬取选课系统个人课表
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:YukinoshitaBot.Services.BksJwcSpider.GetEotInfoAsync">
            <summary>
            爬取评教信息
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:YukinoshitaBot.Services.IMessageHandler">
            <summary>
            消息处理器
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.IMessageHandler.OnGroupTextMsgRecieved(YukinoshitaBot.Data.Event.TextMessage)">
            <summary>
            群文本消息处理
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:YukinoshitaBot.Services.IMessageHandler.OnGroupPictureMsgRecieved(YukinoshitaBot.Data.Event.PictureMessage)">
            <summary>
            群图片消息处理
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:YukinoshitaBot.Services.IMessageHandler.OnFriendTextMsgRecieved(YukinoshitaBot.Data.Event.TextMessage)">
            <summary>
            好友文本消息处理
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="M:YukinoshitaBot.Services.IMessageHandler.OnFriendPictureMsgRecieved(YukinoshitaBot.Data.Event.PictureMessage)">
            <summary>
            好友图片消息处理
            </summary>
            <param name="msg">消息</param>
        </member>
        <member name="T:YukinoshitaBot.Services.MessageQueueScanner">
            <summary>
            消息队列扫描线程
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.MessageQueueScanner.#ctor(Microsoft.Extensions.Logging.ILogger{YukinoshitaBot.Services.MessageQueueScanner},Microsoft.Extensions.Configuration.IConfiguration,YukinoshitaBot.Services.OpqApi)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Services.MessageQueueScanner"/> class.
            </summary>
            <param name="logger">日志</param>
            <param name="configuration">配置</param>
            <param name="opqApi">OPQ服务</param>
        </member>
        <member name="M:YukinoshitaBot.Services.MessageQueueScanner.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Services.MessageQueueScanner.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:YukinoshitaBot.Services.OpqApi">
            <summary>
            OPQ机器人Http接口
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.OpqApi.#ctor(Microsoft.Extensions.Logging.ILogger{YukinoshitaBot.Services.OpqApi},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Services.OpqApi"/> class.
            </summary>
            <param name="logger">日志</param>
            <param name="configuration">配置</param>
        </member>
        <member name="P:YukinoshitaBot.Services.OpqApi.MessageQueue">
            <summary>
            存放待发送的Http请求
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.OpqApi.AddRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            向队列中添加一个请求
            </summary>
            <param name="request">要添加的请求</param>
        </member>
        <member name="T:YukinoshitaBot.Services.Repeater">
            <summary>
            复读机
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.Repeater.OnFriendPictureMsgRecieved(YukinoshitaBot.Data.Event.PictureMessage)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Services.Repeater.OnFriendTextMsgRecieved(YukinoshitaBot.Data.Event.TextMessage)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Services.Repeater.OnGroupPictureMsgRecieved(YukinoshitaBot.Data.Event.PictureMessage)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Services.Repeater.OnGroupTextMsgRecieved(YukinoshitaBot.Data.Event.TextMessage)">
            <inheritdoc/>
        </member>
        <member name="T:YukinoshitaBot.Services.YukinoshitaController">
            <summary>
            实现控制器
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.YukinoshitaController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.Services.YukinoshitaController"/> class.
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.YukinoshitaController.ResolveHandlers">
            <summary>
            解析消息处理器
            </summary>
        </member>
        <member name="M:YukinoshitaBot.Services.YukinoshitaController.AddController(System.Object,YukinoshitaBot.Data.Attributes.YukinoshitaControllerAttribute)">
            <summary>
            添加控制器
            </summary>
            <param name="controller">要添加的控制器</param>
            <param name="controllerInfo">控制器Attribute信息</param>
        </member>
        <member name="M:YukinoshitaBot.Services.YukinoshitaController.OnFriendPictureMsgRecieved(YukinoshitaBot.Data.Event.PictureMessage)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Services.YukinoshitaController.OnFriendTextMsgRecieved(YukinoshitaBot.Data.Event.TextMessage)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Services.YukinoshitaController.OnGroupPictureMsgRecieved(YukinoshitaBot.Data.Event.PictureMessage)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.Services.YukinoshitaController.OnGroupTextMsgRecieved(YukinoshitaBot.Data.Event.TextMessage)">
            <inheritdoc/>
        </member>
        <member name="T:YukinoshitaBot.MainWorker">
            <summary>
            工作线程
            </summary>
        </member>
        <member name="M:YukinoshitaBot.MainWorker.#ctor(Microsoft.Extensions.Logging.ILogger{YukinoshitaBot.MainWorker},Microsoft.Extensions.Configuration.IConfiguration,YukinoshitaBot.Services.OpqApi,YukinoshitaBot.Services.IMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:YukinoshitaBot.MainWorker"/> class.
            </summary>
            <param name="logger">logger</param>
            <param name="configuration">config</param>
            <param name="opqApi">opqApi</param>
            <param name="msgHandler">message handler</param>
        </member>
        <member name="M:YukinoshitaBot.MainWorker.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:YukinoshitaBot.MainWorker.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
    </members>
</doc>
